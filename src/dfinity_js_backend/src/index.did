service: () -> {
    addProperty: (record {size:text; description:text; address:text; propType:text; price:text}) -> (variant {Ok:record {id:text; size:text; description:text; address:text; propType:text; price:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    addPropertyListing: (text) -> (variant {Ok:record {id:text; status:variant {rented:text; Sold:text; Active:text; PaymentPending:text}; propDescription:text; propSize:text; propType:text; propAddress:text; propPrice:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    addUser: (record {name:text; email:text; phoneNo:text}) -> (variant {Ok:record {id:text; listing:vec text; name:text; email:text; phoneNo:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    deleteProperty: (text) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
    deletePropertyListing: (text) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
    deleteUser: (text) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
    getAllProperties: () -> (vec record {id:text; size:text; description:text; address:text; propType:text; price:text}) query;
    getAllPropertyListings: () -> (vec record {id:text; status:variant {rented:text; Sold:text; Active:text; PaymentPending:text}; propDescription:text; propSize:text; propType:text; propAddress:text; propPrice:text}) query;
    getAllUsers: () -> (vec record {id:text; listing:vec text; name:text; email:text; phoneNo:text}) query;
    getBids: (text) -> (vec record {id:text; status:text; userId:text; propertyId:text}) query;
    getProperty: (text) -> (opt record {id:text; size:text; description:text; address:text; propType:text; price:text}) query;
    getPropertyListing: (text) -> (opt record {id:text; status:variant {rented:text; Sold:text; Active:text; PaymentPending:text}; propDescription:text; propSize:text; propType:text; propAddress:text; propPrice:text}) query;
    getUser: (text) -> (opt record {id:text; listing:vec text; name:text; email:text; phoneNo:text}) query;
    getUserListing: (text) -> (vec text) query;
    makeBid: (record {userId:text; propertyId:text}) -> (variant {Ok:record {id:text; status:text; userId:text; propertyId:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    updatePropertyListingStatus: (text, text) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
}
